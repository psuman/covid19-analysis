{
  
    
        "post0": {
            "title": "COVID-19 Growth By State (US)",
            "content": "#collapse-hide fig = plt.figure(figsize=(16, 9)) ax = plt.axes() ax.set_prop_cycle(default_cycler) pd.concat(cols, axis=1).plot(ax=ax, marker=&#39;o&#39;) plt.title(&#39;COVID19 Growth In The US As A Whole And By State&#39;, fontsize=BIGGER_SIZE) plt.ylabel(&#39;Cumulative confirmed cases&#39;) plt.xlabel(f&#39;Number of days since {case_threshold}th case&#39;) plt.annotate(f&#39;Latest data from {states_df.date.max().strftime(&quot;%Y-%m-%d&quot;)}, varies by state n&#39; &#39;Based on COVID Data Repository by the COVID Tracking Project n&#39; &#39;Chart by Avy Faingezicht, @avyfain&#39;, (0.07, 0.01), xycoords=&#39;figure fraction&#39;, fontsize=10); box = ax.get_position() ax.set_position([box.x0, box.y0, box.width * 0.9, box.height]) ax.legend(loc=&#39;center left&#39;, bbox_to_anchor=(1, 0.5)) x = np.linspace(0, plt.xlim()[1]) plt.plot(x, 100 * (1.33) ** x, ls=&#39;--&#39;, color=&#39;k&#39;, label=&#39;33% daily growth&#39;, linewidth=1) plt.annotate(&#39;33% Daily Growth&#39;, (0.7, 0.3), xycoords=&#39;figure fraction&#39;, fontsize=SMALL_SIZE); plt.grid(axis=&#39;y&#39;) formatter = ScalarFormatter() formatter.set_scientific(False) ax.yaxis.set_major_formatter(formatter) ax.yaxis.set_minor_formatter(formatter) . . #collapse-hide fig = plt.figure(figsize=(16, 8)) ax = plt.axes() ax.set_prop_cycle(default_cycler) pd.concat(cols, axis=1).plot(ax=ax, marker=&#39;o&#39;, logy=True) plt.title(&#39;COVID19 Growth In US As A Whole And By State nY-axis is on a log scale&#39;, fontsize=BIGGER_SIZE) plt.ylabel(&#39;Cumulative confirmed cases (log scale)&#39;) plt.xlabel(f&#39;Number of days since {case_threshold}th case&#39;) plt.annotate(f&#39;Latest data from {states_df.date.max().strftime(&quot;%Y-%m-%d&quot;)}, varies by state n&#39; &#39;Based on COVID Data Repository by The COVID Tracking Project n&#39; &#39;Chart by Avy Faingezicht, @avyfain&#39;, (0.07, .01), xycoords=&#39;figure fraction&#39;, fontsize=10); box = ax.get_position() ax.set_position([box.x0, box.y0, box.width * 0.9, box.height]) # Put a legend to the right of the current axis ax.legend(loc=&#39;center left&#39;, bbox_to_anchor=(1, 0.5)) plt.plot(x, 100 * (1.33) ** x, ls=&#39;--&#39;, color=&#39;k&#39;, label=&#39;33% daily growth&#39;) plt.annotate(&#39;33% Daily Growth&#39;, (0.7, 0.65), xycoords=&#39;figure fraction&#39;, fontsize=SMALL_SIZE); plt.grid(axis=&#39;y&#39;) ax.yaxis.set_major_formatter(formatter) . . #collapse-hide # re-using the df&#39;s from above death_threshold = 1 cols = {} states_df[&#39;population&#39;] = states_df[&#39;state&#39;].map(populations) states_df[&#39;deaths_per_m&#39;] = states_df.death / (states_df.population / 1_000_000) for state in states_df.state.unique(): deaths = states_df[(states_df.state == state) &amp; (states_df.death &gt; death_threshold)] deaths = deaths.reset_index().deaths_per_m if len(deaths) &gt; 1: cols[state] = deaths fig = plt.figure(figsize=(16, 8)) ax = plt.axes() ax.set_prop_cycle(default_cycler) pd.concat(cols, axis=1).plot(ax=ax, marker=&#39;o&#39;)#, logy=True) plt.grid(axis=&#39;y&#39;) plt.title(&#39;Death Rate In The US By State&#39;, fontsize=BIGGER_SIZE) plt.ylabel(&#39;Cumulative deaths per 1M people (log scale)&#39;) plt.xlabel(f&#39;Days since {death_threshold}st reported death&#39;) plt.annotate(f&#39;Latest data from {states_df.date.max().strftime(&quot;%Y-%m-%d&quot;)}, varies by state n&#39; &#39;Based on COVID Data Repository by The COVID Tracking Project n&#39; &#39;Chart by Avy Faingezicht, @avyfain&#39;, (0.07, .01), xycoords=&#39;figure fraction&#39;, fontsize=10); box = ax.get_position() ax.set_position([box.x0, box.y0, box.width * 0.9, box.height]) ax.legend(loc=&#39;center left&#39;, bbox_to_anchor=(1, 0.5)) ax.yaxis.set_major_formatter(formatter) . . #collapse-hide # re-using the df&#39;s from above death_threshold = 1 cols = {} for state in states_df.state.unique(): deaths = states_df[(states_df.state == state) &amp; (states_df.death &gt; death_threshold)] deaths = deaths.reset_index().death if len(deaths) &gt; 1: cols[state] = deaths fig = plt.figure(figsize=(16, 8)) ax = plt.axes() ax.set_prop_cycle(default_cycler) pd.concat(cols, axis=1).plot(ax=ax, marker=&#39;o&#39;, logy=True) plt.grid(axis=&#39;y&#39;) plt.title(&#39;Cumalitive Deaths In The US By State&#39;, fontsize=BIGGER_SIZE) plt.ylabel(&#39;Cumulative deaths (log scale)&#39;) plt.xlabel(f&#39;Days since {death_threshold}st reported death&#39;) plt.annotate(f&#39;Latest data from {states_df.date.max().strftime(&quot;%Y-%m-%d&quot;)}, varies by state n&#39; &#39;Based on COVID Data Repository by The COVID Tracking Project n&#39; &#39;Chart by Avy Faingezicht, @avyfain&#39;, (0.07, .01), xycoords=&#39;figure fraction&#39;, fontsize=10); box = ax.get_position() ax.set_position([box.x0, box.y0, box.width * 0.9, box.height]) ax.legend(loc=&#39;center left&#39;, bbox_to_anchor=(1, 0.5)) ax.yaxis.set_major_formatter(formatter) . . This visualization was made by Avy Faingezicht1. . . Data sourced from &quot;The COVID Tracking Project&quot;. Link to original notebook. Updated hourly by GitHub Actions.&#8617; . |",
            "url": "https://psuman.github.io/covid19-analysis/growth-us-states/",
            "relUrl": "/growth-us-states/",
            "date": " • Mar 12, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://psuman.github.io/covid19-analysis/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}